[tox]
envlist = coverage-erase, py27, py33, py34, py35, pypy, jython, pylint, coveralls
skip_missing_interpreters = true

[testenv:pylint]
setenv =
    COVERAGE_FILE = {toxinidir}/.coverage.{envname}
deps =
   git+https://github.com/PyCQA/astroid@master
   coverage

commands =
    {envbindir}/coverage run {envbindir}/pylint -rn --rcfile={toxinidir}/pylintrc {envsitepackagesdir}/pylint
    python -c "import os;cov_strip_abspath = open(os.environ['COVERAGE_FILE'], 'r').read().replace('.tox' + os.sep + os.path.relpath('{envsitepackagesdir}', '{toxworkdir}') + os.sep, '');open(os.environ['COVERAGE_FILE'], 'w').write(cov_strip_abspath)"

[testenv]
deps =
   git+https://github.com/PyCQA/astroid@master
   coverage

setenv =
    COVERAGE_FILE = {toxinidir}/.coverage.{envname}

commands =
    python -Wi {envsitepackagesdir}/coverage run -m unittest discover -s {envsitepackagesdir}/pylint/test/ -p {posargs:*test_*}.py
    python -c "import os;cov_strip_abspath = open(os.environ['COVERAGE_FILE'], 'r').read().replace('.tox' + os.sep + os.path.relpath('{envsitepackagesdir}', '{toxworkdir}') + os.sep, '');open(os.environ['COVERAGE_FILE'], 'w').write(cov_strip_abspath)"
changedir = {toxworkdir}

[testenv:coveralls]
setenv =
    COVERAGE_FILE = {toxinidir}/.coverage
passenv =
    *
deps =
    coverage
    coveralls
skip_install = true
commands =
    python {envsitepackagesdir}/coverage combine
    - python {envsitepackagesdir}/coverage report --rcfile={toxinidir}/.coveragerc -m
    - coveralls --rcfile={toxinidir}/.coveragerc
changedir = {toxinidir}

[testenv:coverage-erase]
setenv =
    COVERAGE_FILE = {toxinidir}/.coverage
deps =
    coverage
skip_install = true
commands =
    python {envsitepackagesdir}/coverage erase
changedir = {toxinidir}
